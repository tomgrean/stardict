#####format####
# :c
# where c is dictionary type(same as the "sametypesequence" in .ifo file)
# x=y
# where all "x" will be replace by "y"
# x@y
# same as x=y but y contains @p, which would be replaced with dictionary path.
# x, y can contain some escape sequences, including
# \t \r \n \~ \= \| \\
# NOTE: the literal "=" after the real "=" do not need to be escaped.
###regular expressions format###
# x~y
# x is a regex(similar to that of javascript's), and y is the regex's replacement string.
# regex replace goes first.
###############
:m
#< and > must come first.
<=&lt;
>=&gt;
\t=&nbsp;&nbsp;&nbsp;&nbsp;
 =&nbsp;
\n=<br>
:t
^~<font color="brown">[
$~]</font>
:h
bword://=/w/
:x
<k>=<!--
</k>=-->
<abr>=<font color="green">
</abr>=</font>
#<abr>=<abbr>
#</abr>=</abbr>
<kref k\="=<a href="/w/
#<kref>([^<]*?)</kref>~<a href="/w/$1">$1</a>
<kref>=<a>
</kref>=</a>
<tr>=<font color="brown">
</tr>=</font>
<ex>=<span>
</ex>=</span>
<c>=<font color="gray">
<c c\==<font color=
</c>=</font>
<rref>[^.<]*\.wav</rref>~&#128266
<rref>@<img src="/r/@p/res/
#/usr/share/stardict/dic=
</rref>=">
